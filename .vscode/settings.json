{
  // Set this file to be machine specific: home machine
    "sync.machineSpecific": true,
  // Vim settings section
    "vim.vimrc.path": "$HOME/.vim/_vimrc",
    "vim.vimrc.enable": true,
    "vim.easymotion": true,
    "vim.smartRelativeLine": true,
    "vim.leader": ",",
    "vim.useSystemClipboard": true,
    "vim.textwidth": 120,
    // Insert mode
    "vim.insertModeKeyBindings": [
      {
        "before": ["j", "k"],
        "after": ["<Esc>"]
      },
      {
        "before": ["<C-l>"],
        "after": ["<C-o>", "1", "l"]
      },
      {
        "before": ["<C-l>"],
        "after": ["<C-o>", "1", "l"]
      }
    ],
    // Switch to insert from visual mode
    "vim.visualModeKeyBindings": [
      {
        "before": ["i"],
        "after": ["<Esc>", "i"]
      },
      {
        //tab back and stay in visual mode
        "before": [">"],
        "after": [">", "g", "v"]
      },
      {
        //tab forward and stay in visual mode
        "before": ["<"],
        "after": ["<", "g", "v"]
      }
    ],
    "vim.normalModeKeyBindings": [
      {
        // (split windows only) switch to window right same as ctrl+up
        "before": ["<C-l>"],
        "commands": ["workbench.action.navigateRight"]
      },
      {
        // (split windows only) switch to window left same as ctrl+pgdown
        "before": ["<C-h>"],
        "commands": ["workbench.action.navigateLeft"]
      },
      {
        // save and exit vscode
        "before": ["Z", "Z"],
        "commands": [":wq"]
      },
      {
        // quit vscode w/o saving
        "before": ["Z", "Q"],
        "commands": [":q!"]
      },
      {
        // save with ,w
        "before": [",", "w"],
        "commands": [":w"]
      },
      {
        // bookmark word
        "before": [",", "m"],
        "commands": ["bookmarks.toggle"]
      },
      {
        // show all bookmarks
        "before": [",", "b"],
        "commands": ["bookmarks.list"]
      },
      {
        // focus on terminal
        "before": ["<leader>", "<leader>", "t"],
        "commands": ["workbench.action.terminal.focus"]
      },
      {
        // move terminal panal to right
        "before": ["<leader>", "<leader>", "r"],
        "commands": ["workbench.action.positionPanelRight"]
      },
      {
        // put selection in print statement
        "before": ["<leader>", "<leader>", "p"],
        "commands": ["print-it.PrintIt"]
      },
      {
        // run code-runner
        "before": ["<leader>", "<leader>", "e"],
        "commands": ["code-runner.run"]
      }
    ],
  // Editor settings
    "editor.semanticTokenColorCustomizations": {
      "enabled": true,
      "rules": {
        "attribute.vb": {
            "foreground": "#ff69b4",
            "fontStyle": "bold"
        }
      }
    },
    "editor.tokenColorCustomizations": {
      "[vb]": {
        "textMateRules": [
          {
            "scope": "entity.name.tag.attribute.vb",
            "name": "The vba keyword 'Attribute'",
            "settings": {
              "foreground": "#ff69b4",
              "fontStyle": "bold"
            }
          },
        ]
      },
      "comments": "#87ff7c",
      "textMateRules": [
        {
          "scope": "text.notes.info",
          "settings": {
            "foreground": "#17a2b8",
            "fontStyle": "bold"
          }
        },
        {
          "scope": "text.notes.success",
          "settings": {
            "foreground": "#28a745",
            "fontStyle": "bold"
          }
        },
        {
          "scope": "text.notes.warning",
          "settings": {
            "foreground": "#ffc107",
            "fontStyle": "bold"
          }
        },
        {
          "scope": "text.notes.danger",
          "settings": {
            "foreground": "#dc3545",
            "fontStyle": "bold"
          }
        }
      ]
    },
    "editor.snippetSuggestions": "top",
    "editor.detectIndentation": true,
    "editor.formatOnPaste": false,
    "editor.insertSpaces": false,
    "editor.suggestSelection": "first",
    "editor.acceptSuggestionOnEnter": "on", //no map=false
    "editor.stablePeek": true,
    "editor.fontFamily": "'Fira Code','Anonymous Pro', Consolas, 'Courier New', monospace",
    "editor.fontLigatures": true,
    "editor.cursorBlinking": "solid",
    "editor.cursorWidth": 1,
    "editor.unusualLineTerminators": "prompt",
    "editor.wordWrapColumn": 72,
    "editor.wordWrap": "off",
    "editor.tabSize": 2,
    "editor.lightbulb.enabled": "off",
    "editor.renderWhitespace": "all",
    "editor.lineHeight": 22,
    "editor.formatOnSave": false,
    "editor.glyphMargin": true,
    "editor.minimap.renderCharacters": false,
    "editor.roundedSelection": false,
    "editor.lineNumbers": "relative",
  // Separators Extension Settings
    "separators.enabledSymbols": [
      "Classes",
      "Constructors",
      "Enums",
      "Functions",
      "Interfaces",
      "Methods",
      "Namespaces",
      "Structs"
    ],
  // TO do tree extension settings
    "todo-tree.general.tags": [
      "BUG",
      "HACK",
      "FIXME",
      "TODO",
      "XXX",
      "[ ]",
      "[x]"
    ],
    "todo-tree.regex.regex": "(//|'|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+.))\\s*($TAGS)",
  // Terminal settings: using Git Bash must use path to cmder profile at home
    "terminal.integrated.profiles.windows": {
      "Git Bash": {
        "path": [
          "C:\\Program Files\\Git\\bin\\bash.exe"
        ],
        "icon": "terminal-bash"
      }
    },
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "terminal.integrated.defaultProfile.windows": "Git Bash",
  // Git settings
    "git.enabled": true,
  // MSSQL Extension Settings
    "mssql.connections": [
      {
        "server": "nshsql2p",
        "database": "CourtReport",
        "authenticationType": "Integrated",
        "password": "",
        "encrypt": "Mandatory",
        "trustServerCertificate": true
      },
      {
        "server": "MHNODSSQL1P",
        "database": "",
        "authenticationType": "Integrated",
        "password": "",
        "encrypt": "Mandatory",
        "trustServerCertificate": true
      },
      {
        "server": "nshsql1p",
        "database": "",
        "authenticationType": "Integrated",
        "password": "",
        "encrypt": "Mandatory",
        "trustServerCertificate": true
      }
    ],
  // Prettier-SQL settings
    "Prettier-SQL.commaPosition": "before",
    "Prettier-SQL.SQLFlavourOverride": "sql",
    "mssql.splitPaneSelection": "end",
    "Prettier-SQL.breakBeforeBooleanOperator": true,
  // With python code
    "[python]": {
      "editor.defaultFormatter": "ms-python.black-formatter",
      "editor.rulers": [72, 79],
      "editor.tabSize": 4,
      "editor.insertSpaces": true,
      "editor.formatOnType": true
    },
    "python.formatting.blackArgs": ["--line-length", "79"],
    "python.formatting.provider": "black",
  // Office Viewer(Markdown)
    "workbench.editorAssociations": {
      "*.md": "default"
    },
  // File handling section
    "files.associations": {
      "*.bas": "vb"
    },
    "files.trimTrailingWhitespace": true,
    // Exclude files from search
    "files.exclude": {
      "**/.git": true,
      "**/.svn": true,
      "**/.hg": true,
      "**/CVS": true,
      "**/.DS_Store": true,
      "**/Thumbs.db": true,
      "**/*.pyc": true,
      "**/__pycache__": true
    },
    "files.eol": "\r\n",
  // Rewrap ext settings
    "rewrap.autoWrap.notification": "text",
    "rewrap.wrappingColumn": 72,
  // Prettier-esbenp settings change to whatever editor needed for that lang
    "[html]": {
      "editor.defaultFormatter": "svipas.prettier-plus",
    },
    "[css]": {
      "editor.defaultFormatter": null,
    },
  // Autoit Files
  "autoit.aiPath": "C:\\Program Files (x86)\\AutoIt3\\AutoIt3_x64.exe",
  "autoit.checkPath": "C:\\Program Files (x86)\\AutoIt3\\Au3Check.exe",
  "autoit.helpPath": "C:\\Program Files (x86)\\AutoIt3\\AutoIt3Help.exe",
  "autoit.includePaths": [
  "C:\\Program Files (x86)\\AutoIt3\\Include"
  ],
  "autoit.infoPath": "C:\\Program Files (x86)\\AutoIt3\\Au3Info_x64.exe",
  "autoit.kodaPath": "C:\\Program Files (x86)\\AutoIt3\\SciTE\\Koda\\FD.exe",
  "autoit.wrapperPath": "C:\\Program Files (x86)\\AutoIt3\\SciTE\\AutoIt3Wrapper\\AutoIt3Wrapper.au3",
  "autoit.UDFCreator": "lundeen-bryan",
  // Code Runner Extension Settings
    "code-runner.runInTerminal": true,
    "workbench.startupEditor": "none",
    "workbench.colorTheme": "Cobalt2",
    "workbench.iconTheme": "vscode-icons",
    "vscode-office.chromiumPath": "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
    "vscode-office.previewCodeHighlight.style": "vim",
    "sidenotes.hoverToolbar": true,
    "sidenotes.showIdOnHover": true,
    "window.zoomLevel": 1,
    "markdown-toc.depthFrom": 2,
    "markdown-preview-enhanced.previewTheme": "one-dark.css",
    // Opt-out of extension updates
    "extensions.autoUpdate": false,
    // Opt out of VS Code updates
    "update.mode": "none",
    "terminal.external.windowsExec": "C:\\tools\\Cmder\\vendor\\git-for-windows\\bin\\bash.exe",
    "[sql]": {
      "editor.defaultFormatter": "adpyke.vscode-sql-formatter"
    },
    "git.openRepositoryInParentFolders": "never",
    "mssql.enableQueryHistoryCapture": false,
    "[powerquery]": {},
    "update.enableWindowsBackgroundUpdates": false,
    "security.workspace.trust.untrustedFiles": "open"
}